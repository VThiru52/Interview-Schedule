{"ast":null,"code":"export const generateTimeSlots = (duration, bookedSlots = []) => {\n  const startTime = 6;\n  const endTime = 21;\n  const timeSlots = [];\n  let currentMinute = 0;\n  for (let hour = startTime; hour < endTime; hour++) {\n    for (let minute = currentMinute; minute < 60; minute += duration) {\n      const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\n      let nextHour = hour;\n      let nextMinute = minute + duration;\n      if (nextMinute >= 60) {\n        nextHour += 1;\n        nextMinute = nextMinute % 60;\n      }\n      const label = `${time} - ${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\n      const isSlotBooked = bookedSlots.some(slot => slot.startTime <= time && slot.endTime > time || slot.startTime < label && slot.endTime >= label);\n      if (!isSlotBooked) {\n        timeSlots.push({\n          label,\n          value: label\n        });\n      }\n      currentMinute = nextMinute;\n    }\n    currentMinute = 0;\n  }\n  return timeSlots;\n};","map":{"version":3,"names":["generateTimeSlots","duration","bookedSlots","startTime","endTime","timeSlots","currentMinute","hour","minute","time","String","padStart","nextHour","nextMinute","label","isSlotBooked","some","slot","push","value"],"sources":["D:/Slope Rate Techno/slope-rate-techno-time-slots/src/utils.js"],"sourcesContent":["export const generateTimeSlots = (duration, bookedSlots = []) => {\r\n    const startTime = 6;\r\n    const endTime = 21;\r\n    const timeSlots = [];\r\n  \r\n    let currentMinute = 0;\r\n  \r\n    for (let hour = startTime; hour < endTime; hour++) {\r\n      for (let minute = currentMinute; minute < 60; minute += duration) {\r\n        const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\r\n        let nextHour = hour;\r\n        let nextMinute = minute + duration;\r\n  \r\n        if (nextMinute >= 60) {\r\n          nextHour += 1;\r\n          nextMinute = nextMinute % 60;\r\n        }\r\n  \r\n        const label = `${time} - ${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\r\n  \r\n        const isSlotBooked = bookedSlots.some(\r\n          (slot) =>\r\n            (slot.startTime <= time && slot.endTime > time) ||\r\n            (slot.startTime < label && slot.endTime >= label)\r\n        );\r\n  \r\n        if (!isSlotBooked) {\r\n          timeSlots.push({ label, value: label });\r\n        }\r\n  \r\n        currentMinute = nextMinute;\r\n      }\r\n  \r\n      currentMinute = 0;\r\n    }\r\n  \r\n    return timeSlots;\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,WAAW,GAAG,EAAE,KAAK;EAC7D,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,SAAS,GAAG,EAAE;EAEpB,IAAIC,aAAa,GAAG,CAAC;EAErB,KAAK,IAAIC,IAAI,GAAGJ,SAAS,EAAEI,IAAI,GAAGH,OAAO,EAAEG,IAAI,EAAE,EAAE;IACjD,KAAK,IAAIC,MAAM,GAAGF,aAAa,EAAEE,MAAM,GAAG,EAAE,EAAEA,MAAM,IAAIP,QAAQ,EAAE;MAChE,MAAMQ,IAAI,GAAI,GAAEC,MAAM,CAACH,IAAI,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MAClF,IAAIC,QAAQ,GAAGL,IAAI;MACnB,IAAIM,UAAU,GAAGL,MAAM,GAAGP,QAAQ;MAElC,IAAIY,UAAU,IAAI,EAAE,EAAE;QACpBD,QAAQ,IAAI,CAAC;QACbC,UAAU,GAAGA,UAAU,GAAG,EAAE;MAC9B;MAEA,MAAMC,KAAK,GAAI,GAAEL,IAAK,MAAKC,MAAM,CAACE,QAAQ,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACG,UAAU,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MAErG,MAAMI,YAAY,GAAGb,WAAW,CAACc,IAAI,CAClCC,IAAI,IACFA,IAAI,CAACd,SAAS,IAAIM,IAAI,IAAIQ,IAAI,CAACb,OAAO,GAAGK,IAAI,IAC7CQ,IAAI,CAACd,SAAS,GAAGW,KAAK,IAAIG,IAAI,CAACb,OAAO,IAAIU,KAC/C,CAAC;MAED,IAAI,CAACC,YAAY,EAAE;QACjBV,SAAS,CAACa,IAAI,CAAC;UAAEJ,KAAK;UAAEK,KAAK,EAAEL;QAAM,CAAC,CAAC;MACzC;MAEAR,aAAa,GAAGO,UAAU;IAC5B;IAEAP,aAAa,GAAG,CAAC;EACnB;EAEA,OAAOD,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}