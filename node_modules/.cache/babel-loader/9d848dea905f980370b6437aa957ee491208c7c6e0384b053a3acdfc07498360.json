{"ast":null,"code":"export const generateTimeSlots = (duration, bookedSlots = []) => {\n  const startTime = 6;\n  const endTime = 21;\n  const timeSlots = [];\n  let currentHour = startTime;\n  let currentMinute = 0;\n  while (currentHour < endTime || currentHour === endTime && currentMinute === 0) {\n    const time = `${String(currentHour).padStart(2, '0')}:${String(currentMinute).padStart(2, '0')}`;\n    const nextMinute = currentMinute + duration;\n    let nextHour = currentHour;\n    if (nextMinute >= 60) {\n      nextHour += 1;\n      currentMinute = nextMinute % 60;\n    } else {\n      currentMinute = nextMinute;\n    }\n    const endTime = `${String(nextHour).padStart(2, '0')}:${String(currentMinute).padStart(2, '0')}`;\n    const label = `${time} - ${endTime}`;\n    const isSlotBooked = bookedSlots.some(slot => slot.startTime <= time && slot.endTime > time || slot.startTime < endTime && slot.endTime >= endTime);\n    if (!isSlotBooked) {\n      timeSlots.push({\n        label,\n        value: {\n          startTime: time,\n          endTime\n        }\n      });\n    }\n    if (currentMinute === 0) {\n      currentHour += 1;\n    }\n  }\n  return timeSlots;\n};","map":{"version":3,"names":["generateTimeSlots","duration","bookedSlots","startTime","endTime","timeSlots","currentHour","currentMinute","time","String","padStart","nextMinute","nextHour","label","isSlotBooked","some","slot","push","value"],"sources":["D:/Slope Rate Techno/slope-rate-techno-time-slots/src/utils.js"],"sourcesContent":["export const generateTimeSlots = (duration, bookedSlots = []) => {\r\n    const startTime = 6;\r\n    const endTime = 21;\r\n    const timeSlots = [];\r\n  \r\n    let currentHour = startTime;\r\n    let currentMinute = 0;\r\n  \r\n    while (currentHour < endTime || (currentHour === endTime && currentMinute === 0)) {\r\n      const time = `${String(currentHour).padStart(2, '0')}:${String(currentMinute).padStart(2, '0')}`;\r\n  \r\n      const nextMinute = currentMinute + duration;\r\n      let nextHour = currentHour;\r\n  \r\n      if (nextMinute >= 60) {\r\n        nextHour += 1;\r\n        currentMinute = nextMinute % 60;\r\n      } else {\r\n        currentMinute = nextMinute;\r\n      }\r\n  \r\n      const endTime = `${String(nextHour).padStart(2, '0')}:${String(currentMinute).padStart(2, '0')}`;\r\n      const label = `${time} - ${endTime}`;\r\n  \r\n      const isSlotBooked = bookedSlots.some(\r\n        (slot) =>\r\n          (slot.startTime <= time && slot.endTime > time) ||\r\n          (slot.startTime < endTime && slot.endTime >= endTime)\r\n      );\r\n  \r\n      if (!isSlotBooked) {\r\n        timeSlots.push({ label, value: { startTime: time, endTime } });\r\n      }\r\n  \r\n      if (currentMinute === 0) {\r\n        currentHour += 1;\r\n      }\r\n    }\r\n  \r\n    return timeSlots;\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,WAAW,GAAG,EAAE,KAAK;EAC7D,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,SAAS,GAAG,EAAE;EAEpB,IAAIC,WAAW,GAAGH,SAAS;EAC3B,IAAII,aAAa,GAAG,CAAC;EAErB,OAAOD,WAAW,GAAGF,OAAO,IAAKE,WAAW,KAAKF,OAAO,IAAIG,aAAa,KAAK,CAAE,EAAE;IAChF,MAAMC,IAAI,GAAI,GAAEC,MAAM,CAACH,WAAW,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACF,aAAa,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;IAEhG,MAAMC,UAAU,GAAGJ,aAAa,GAAGN,QAAQ;IAC3C,IAAIW,QAAQ,GAAGN,WAAW;IAE1B,IAAIK,UAAU,IAAI,EAAE,EAAE;MACpBC,QAAQ,IAAI,CAAC;MACbL,aAAa,GAAGI,UAAU,GAAG,EAAE;IACjC,CAAC,MAAM;MACLJ,aAAa,GAAGI,UAAU;IAC5B;IAEA,MAAMP,OAAO,GAAI,GAAEK,MAAM,CAACG,QAAQ,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACF,aAAa,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;IAChG,MAAMG,KAAK,GAAI,GAAEL,IAAK,MAAKJ,OAAQ,EAAC;IAEpC,MAAMU,YAAY,GAAGZ,WAAW,CAACa,IAAI,CAClCC,IAAI,IACFA,IAAI,CAACb,SAAS,IAAIK,IAAI,IAAIQ,IAAI,CAACZ,OAAO,GAAGI,IAAI,IAC7CQ,IAAI,CAACb,SAAS,GAAGC,OAAO,IAAIY,IAAI,CAACZ,OAAO,IAAIA,OACjD,CAAC;IAED,IAAI,CAACU,YAAY,EAAE;MACjBT,SAAS,CAACY,IAAI,CAAC;QAAEJ,KAAK;QAAEK,KAAK,EAAE;UAAEf,SAAS,EAAEK,IAAI;UAAEJ;QAAQ;MAAE,CAAC,CAAC;IAChE;IAEA,IAAIG,aAAa,KAAK,CAAC,EAAE;MACvBD,WAAW,IAAI,CAAC;IAClB;EACF;EAEA,OAAOD,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}