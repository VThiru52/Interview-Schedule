{"ast":null,"code":"var _jsxFileName = \"D:\\\\Slope Rate Techno\\\\slope-rate-techno-time-slots\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBookedSlot } from './redux/actions';\nimport { bookTimeSlot, loadBookedSlots } from './redux/actions';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Select from 'react-select';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst timeOptions = [{\n  label: '6:00 AM - 7:00 AM',\n  value: '6:00-7:00'\n}, {\n  label: '7:00 AM - 8:00 AM',\n  value: '7:00-8:00'\n}, {\n  label: '8:00 AM - 9:00 AM',\n  value: '8:00-9:00'\n}\n// Add more time slots as needed\n];\nconst App = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [name, setName] = useState('');\n  const [client, setClient] = useState('');\n  const dispatch = useDispatch();\n  const bookedSlots = useSelector(state => state.bookedSlots);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    setSelectedTime(null); // Reset selected time when changing the date\n  };\n  const handleTimeChange = time => {\n    setSelectedTime(time);\n  };\n  const bookTimeSlot = () => {\n    // Your existing booking logic\n  };\n  useEffect(() => {\n    // Load booked slots from localStorage on component mount\n    dispatch(loadBookedSlots());\n  }, []);\n  useEffect(() => {\n    // Save booked slots to localStorage whenever bookedSlots changes\n    localStorage.setItem('bookedSlots', JSON.stringify(bookedSlots));\n  }, [bookedSlots]);\n  const onDragEnd = result => {\n    if (!result.destination) return; // Dropped outside the list\n\n    const reorderedTimeOptions = Array.from(timeOptions);\n    const [removed] = reorderedTimeOptions.splice(result.source.index, 1);\n    reorderedTimeOptions.splice(result.destination.index, 0, removed);\n\n    // Update state with the reordered time options\n    // You may want to dispatch an action to update the Redux store if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: handleDateChange,\n        minDate: new Date(),\n        dateFormat: \"MMMM, yyyy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: onDragEnd,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"timeOptions\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [timeOptions.map((option, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: option.value,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    options: [option],\n                    value: selectedTime && selectedTime.value === option.value ? selectedTime : null,\n                    onChange: () => handleTimeChange(option)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 27\n                }, this)\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: bookTimeSlot,\n          children: \"Book Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booked-slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3sCvYLRRVxObICnYV5iGmoFjAx0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addBookedSlot","bookTimeSlot","loadBookedSlots","DatePicker","Select","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","timeOptions","label","value","App","_s","selectedDate","setSelectedDate","selectedTime","setSelectedTime","name","setName","client","setClient","dispatch","bookedSlots","state","handleDateChange","date","handleTimeChange","time","localStorage","setItem","JSON","stringify","onDragEnd","result","destination","reorderedTimeOptions","Array","from","removed","splice","source","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","minDate","Date","dateFormat","droppableId","provided","droppableProps","ref","innerRef","map","option","draggableId","draggableProps","dragHandleProps","options","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Slope Rate Techno/slope-rate-techno-time-slots/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addBookedSlot } from './redux/actions';\nimport { bookTimeSlot, loadBookedSlots } from './redux/actions';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Select from 'react-select';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\n\nconst timeOptions = [\n  { label: '6:00 AM - 7:00 AM', value: '6:00-7:00' },\n  { label: '7:00 AM - 8:00 AM', value: '7:00-8:00' },\n  { label: '8:00 AM - 9:00 AM', value: '8:00-9:00' },\n  // Add more time slots as needed\n];\n\nconst App = () => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTime, setSelectedTime] = useState(null);\n  const [name, setName] = useState('');\n  const [client, setClient] = useState('');\n\n  const dispatch = useDispatch();\n  const bookedSlots = useSelector((state) => state.bookedSlots);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setSelectedTime(null); // Reset selected time when changing the date\n  };\n\n  const handleTimeChange = (time) => {\n    setSelectedTime(time);\n  };\n\n  const bookTimeSlot = () => {\n    // Your existing booking logic\n  };\n\n  useEffect(() => {\n    // Load booked slots from localStorage on component mount\n    dispatch(loadBookedSlots());\n  }, []);\n\n  useEffect(() => {\n    // Save booked slots to localStorage whenever bookedSlots changes\n    localStorage.setItem('bookedSlots', JSON.stringify(bookedSlots));\n  }, [bookedSlots]);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return; // Dropped outside the list\n\n    const reorderedTimeOptions = Array.from(timeOptions);\n    const [removed] = reorderedTimeOptions.splice(result.source.index, 1);\n    reorderedTimeOptions.splice(result.destination.index, 0, removed);\n\n    // Update state with the reordered time options\n    // You may want to dispatch an action to update the Redux store if needed\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"booking-container\">\n        <h2>Select Date</h2>\n        <DatePicker\n          selected={selectedDate}\n          onChange={handleDateChange}\n          minDate={new Date()}\n          dateFormat=\"MMMM, yyyy\"\n        />\n\n        {selectedDate && (\n          <>\n            <h2>Select Time</h2>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"timeOptions\">\n                {(provided) => (\n                  <div {...provided.droppableProps} ref={provided.innerRef}>\n                    {timeOptions.map((option, index) => (\n                      <Draggable key={option.value} draggableId={option.value} index={index}>\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <Select\n                              options={[option]}\n                              value={selectedTime && selectedTime.value === option.value ? selectedTime : null}\n                              onChange={() => handleTimeChange(option)}\n                            />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n\n            <h2>Enter Details</h2>\n            {/* Your existing input fields */}\n            <button onClick={bookTimeSlot}>Book Slot</button>\n          </>\n        )}\n      </div>\n\n      <div className=\"booked-slots\">\n        {/* Your existing booked slots display */}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}