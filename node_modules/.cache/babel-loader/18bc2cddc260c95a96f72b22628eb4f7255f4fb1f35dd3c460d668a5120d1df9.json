{"ast":null,"code":"// utils.js\nexport const generateTimeSlots = duration => {\n  const startTime = 6;\n  const endTime = 21;\n  const timeSlots = [];\n  for (let hour = startTime; hour < endTime; hour++) {\n    for (let minute = 0; minute < 60; minute += duration) {\n      console.log(startTime);\n      console.log(endTime);\n      const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\n      let nextHour = hour;\n      let nextMinute = minute + duration;\n      console.log(time);\n      console.log(nextMinute);\n      if (nextMinute >= 60) {\n        nextHour += Math.floor(nextMinute / 60);\n        nextMinute %= 60;\n      }\n      const label = `${time} - ${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\n      timeSlots.push({\n        label,\n        value: time\n      });\n    }\n  }\n  return timeSlots;\n};","map":{"version":3,"names":["generateTimeSlots","duration","startTime","endTime","timeSlots","hour","minute","console","log","time","String","padStart","nextHour","nextMinute","Math","floor","label","push","value"],"sources":["D:/Slope Rate Techno/slope-rate-techno-time-slots/src/utils.js"],"sourcesContent":["// utils.js\r\nexport const generateTimeSlots = (duration) => {\r\n    const startTime = 6;\r\n    const endTime = 21;\r\n    const timeSlots = [];\r\n  \r\n    for (let hour = startTime; hour < endTime; hour++) {\r\n      for (let minute = 0; minute < 60; minute += duration) {\r\n        console.log(startTime);\r\n        console.log(endTime);\r\n\r\n        const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\r\n        let nextHour = hour;\r\n        let nextMinute = minute + duration;\r\n  \r\n        console.log(time);\r\n        console.log(nextMinute);\r\n\r\n        if (nextMinute >= 60) {\r\n          nextHour += Math.floor(nextMinute / 60);\r\n          nextMinute %= 60;\r\n        }\r\n  \r\n        const label = `${time} - ${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\r\n        timeSlots.push({ label, value: time });\r\n      }\r\n    }\r\n  \r\n    return timeSlots;\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAIC,QAAQ,IAAK;EAC3C,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,SAAS,GAAG,EAAE;EAEpB,KAAK,IAAIC,IAAI,GAAGH,SAAS,EAAEG,IAAI,GAAGF,OAAO,EAAEE,IAAI,EAAE,EAAE;IACjD,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,EAAE,EAAEA,MAAM,IAAIL,QAAQ,EAAE;MACpDM,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;MACtBK,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;MAEpB,MAAMM,IAAI,GAAI,GAAEC,MAAM,CAACL,IAAI,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACJ,MAAM,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MAClF,IAAIC,QAAQ,GAAGP,IAAI;MACnB,IAAIQ,UAAU,GAAGP,MAAM,GAAGL,QAAQ;MAElCM,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjBF,OAAO,CAACC,GAAG,CAACK,UAAU,CAAC;MAEvB,IAAIA,UAAU,IAAI,EAAE,EAAE;QACpBD,QAAQ,IAAIE,IAAI,CAACC,KAAK,CAACF,UAAU,GAAG,EAAE,CAAC;QACvCA,UAAU,IAAI,EAAE;MAClB;MAEA,MAAMG,KAAK,GAAI,GAAEP,IAAK,MAAKC,MAAM,CAACE,QAAQ,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACG,UAAU,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MACrGP,SAAS,CAACa,IAAI,CAAC;QAAED,KAAK;QAAEE,KAAK,EAAET;MAAK,CAAC,CAAC;IACxC;EACF;EAEA,OAAOL,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}