{"ast":null,"code":"// utils.js\nexport const generateTimeSlots = (duration, bookedSlots) => {\n  const startTime = 6;\n  const endTime = 21;\n  const timeSlots = [];\n  for (let hour = startTime; hour < endTime; hour++) {\n    for (let minute = 0; minute < 60; minute += duration) {\n      const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\n      const endTime = addDurationToTime(hour, minute, duration);\n      const label = `${time} - ${endTime}`;\n      const isSlotBooked = isSlotAlreadyBooked(time, endTime, bookedSlots);\n      if (!isSlotBooked) {\n        timeSlots.push({\n          label,\n          value: time\n        });\n      }\n    }\n  }\n  return timeSlots;\n};\nconst addDurationToTime = (hour, minute, duration) => {\n  let nextHour = hour;\n  let nextMinute = minute + duration;\n  if (nextMinute >= 60) {\n    nextHour += Math.floor(nextMinute / 60);\n    nextMinute %= 60;\n  }\n  return `${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\n};\nconst isSlotAlreadyBooked = (startTime, endTime, bookedSlots) => {\n  return bookedSlots.some(slot => slot.startTime <= startTime && slot.endTime > startTime || slot.startTime < endTime && slot.endTime >= endTime);\n};","map":{"version":3,"names":["generateTimeSlots","duration","bookedSlots","startTime","endTime","timeSlots","hour","minute","time","String","padStart","addDurationToTime","label","isSlotBooked","isSlotAlreadyBooked","push","value","nextHour","nextMinute","Math","floor","some","slot"],"sources":["D:/Slope Rate Techno/slope-rate-techno-time-slots/src/utils.js"],"sourcesContent":["// utils.js\r\nexport const generateTimeSlots = (duration, bookedSlots) => {\r\n    const startTime = 6;\r\n    const endTime = 21;\r\n    const timeSlots = [];\r\n  \r\n    for (let hour = startTime; hour < endTime; hour++) {\r\n      for (let minute = 0; minute < 60; minute += duration) {\r\n        const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\r\n        const endTime = addDurationToTime(hour, minute, duration);\r\n        const label = `${time} - ${endTime}`;\r\n        const isSlotBooked = isSlotAlreadyBooked(time, endTime, bookedSlots);\r\n  \r\n        if (!isSlotBooked) {\r\n          timeSlots.push({ label, value: time });\r\n        }\r\n      }\r\n    }\r\n  \r\n    return timeSlots;\r\n  };\r\n  \r\n  const addDurationToTime = (hour, minute, duration) => {\r\n    let nextHour = hour;\r\n    let nextMinute = minute + duration;\r\n  \r\n    if (nextMinute >= 60) {\r\n      nextHour += Math.floor(nextMinute / 60);\r\n      nextMinute %= 60;\r\n    }\r\n  \r\n    return `${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\r\n  };\r\n  \r\n  const isSlotAlreadyBooked = (startTime, endTime, bookedSlots) => {\r\n    return bookedSlots.some(\r\n      (slot) =>\r\n        (slot.startTime <= startTime && slot.endTime > startTime) ||\r\n        (slot.startTime < endTime && slot.endTime >= endTime)\r\n    );\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;EACxD,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,SAAS,GAAG,EAAE;EAEpB,KAAK,IAAIC,IAAI,GAAGH,SAAS,EAAEG,IAAI,GAAGF,OAAO,EAAEE,IAAI,EAAE,EAAE;IACjD,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,EAAE,EAAEA,MAAM,IAAIN,QAAQ,EAAE;MACpD,MAAMO,IAAI,GAAI,GAAEC,MAAM,CAACH,IAAI,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MAClF,MAAMN,OAAO,GAAGO,iBAAiB,CAACL,IAAI,EAAEC,MAAM,EAAEN,QAAQ,CAAC;MACzD,MAAMW,KAAK,GAAI,GAAEJ,IAAK,MAAKJ,OAAQ,EAAC;MACpC,MAAMS,YAAY,GAAGC,mBAAmB,CAACN,IAAI,EAAEJ,OAAO,EAAEF,WAAW,CAAC;MAEpE,IAAI,CAACW,YAAY,EAAE;QACjBR,SAAS,CAACU,IAAI,CAAC;UAAEH,KAAK;UAAEI,KAAK,EAAER;QAAK,CAAC,CAAC;MACxC;IACF;EACF;EAEA,OAAOH,SAAS;AAClB,CAAC;AAED,MAAMM,iBAAiB,GAAGA,CAACL,IAAI,EAAEC,MAAM,EAAEN,QAAQ,KAAK;EACpD,IAAIgB,QAAQ,GAAGX,IAAI;EACnB,IAAIY,UAAU,GAAGX,MAAM,GAAGN,QAAQ;EAElC,IAAIiB,UAAU,IAAI,EAAE,EAAE;IACpBD,QAAQ,IAAIE,IAAI,CAACC,KAAK,CAACF,UAAU,GAAG,EAAE,CAAC;IACvCA,UAAU,IAAI,EAAE;EAClB;EAEA,OAAQ,GAAET,MAAM,CAACQ,QAAQ,CAAC,CAACP,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACS,UAAU,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;AACtF,CAAC;AAED,MAAMI,mBAAmB,GAAGA,CAACX,SAAS,EAAEC,OAAO,EAAEF,WAAW,KAAK;EAC/D,OAAOA,WAAW,CAACmB,IAAI,CACpBC,IAAI,IACFA,IAAI,CAACnB,SAAS,IAAIA,SAAS,IAAImB,IAAI,CAAClB,OAAO,GAAGD,SAAS,IACvDmB,IAAI,CAACnB,SAAS,GAAGC,OAAO,IAAIkB,IAAI,CAAClB,OAAO,IAAIA,OACjD,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}