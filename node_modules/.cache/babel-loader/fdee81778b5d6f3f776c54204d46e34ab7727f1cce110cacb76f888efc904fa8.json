{"ast":null,"code":"export const generateTimeSlots = duration => {\n  const startTime = 6;\n  const endTime = 21;\n  const timeSlots = [];\n  let currentMinute = 0; // Initialize currentMinute to track time accurately\n\n  for (let hour = startTime; hour < endTime; hour++) {\n    for (let minute = currentMinute; minute < 60; minute += duration) {\n      const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\n      let nextHour = hour;\n      let nextMinute = minute + duration;\n      if (nextMinute >= 60) {\n        nextHour += 1; // Increment hour directly if nextMinute exceeds 60\n        nextMinute = nextMinute % 60; // Correctly calculate nextMinute\n      }\n      const label = `${time} - ${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\n      const startTime = `${time}`;\n      const endTime = `${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(3, '0')}`;\n      console.log(\"===\", label);\n      console.log(\"startTime\", startTime);\n      console.log(\"endTime\", endTime);\n      timeSlots.push({\n        label,\n        value: label\n      });\n      timeSlots.push({\n        startTime,\n        value: startTime\n      });\n      timeSlots.push({\n        endTime,\n        value: endTime\n      });\n      currentMinute = nextMinute; // Update currentMinute for subsequent iterations\n    }\n    currentMinute = 0; // Reset currentMinute for the next hour\n  }\n  return timeSlots;\n};","map":{"version":3,"names":["generateTimeSlots","duration","startTime","endTime","timeSlots","currentMinute","hour","minute","time","String","padStart","nextHour","nextMinute","label","console","log","push","value"],"sources":["D:/Slope Rate Techno/slope-rate-techno-time-slots/src/utils.js"],"sourcesContent":["export const generateTimeSlots = (duration) => {\r\n    const startTime = 6;\r\n    const endTime = 21;\r\n    const timeSlots = [];\r\n  \r\n    let currentMinute = 0; // Initialize currentMinute to track time accurately\r\n  \r\n    for (let hour = startTime; hour < endTime; hour++) {\r\n      for (let minute = currentMinute; minute < 60; minute += duration) {\r\n        const time = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\r\n        let nextHour = hour;\r\n        let nextMinute = minute + duration;\r\n  \r\n        if (nextMinute >= 60) {\r\n          nextHour += 1; // Increment hour directly if nextMinute exceeds 60\r\n          nextMinute = nextMinute % 60; // Correctly calculate nextMinute\r\n        }\r\n  \r\n        const label = `${time} - ${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(2, '0')}`;\r\n        const startTime = `${time}`;\r\n        const endTime = `${String(nextHour).padStart(2, '0')}:${String(nextMinute).padStart(3, '0')}`;\r\n\r\n        console.log(\"===\", label);\r\n        console.log(\"startTime\", startTime);\r\n        console.log(\"endTime\", endTime);\r\n\r\n        timeSlots.push({ label, value: label });\r\n        timeSlots.push({ startTime, value: startTime });\r\n        timeSlots.push({ endTime, value: endTime });\r\n        \r\n  \r\n        currentMinute = nextMinute; // Update currentMinute for subsequent iterations\r\n      }\r\n  \r\n      currentMinute = 0; // Reset currentMinute for the next hour\r\n    }\r\n  \r\n    return timeSlots;\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,QAAQ,IAAK;EAC3C,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,SAAS,GAAG,EAAE;EAEpB,IAAIC,aAAa,GAAG,CAAC,CAAC,CAAC;;EAEvB,KAAK,IAAIC,IAAI,GAAGJ,SAAS,EAAEI,IAAI,GAAGH,OAAO,EAAEG,IAAI,EAAE,EAAE;IACjD,KAAK,IAAIC,MAAM,GAAGF,aAAa,EAAEE,MAAM,GAAG,EAAE,EAAEA,MAAM,IAAIN,QAAQ,EAAE;MAChE,MAAMO,IAAI,GAAI,GAAEC,MAAM,CAACH,IAAI,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MAClF,IAAIC,QAAQ,GAAGL,IAAI;MACnB,IAAIM,UAAU,GAAGL,MAAM,GAAGN,QAAQ;MAElC,IAAIW,UAAU,IAAI,EAAE,EAAE;QACpBD,QAAQ,IAAI,CAAC,CAAC,CAAC;QACfC,UAAU,GAAGA,UAAU,GAAG,EAAE,CAAC,CAAC;MAChC;MAEA,MAAMC,KAAK,GAAI,GAAEL,IAAK,MAAKC,MAAM,CAACE,QAAQ,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACG,UAAU,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MACrG,MAAMR,SAAS,GAAI,GAAEM,IAAK,EAAC;MAC3B,MAAML,OAAO,GAAI,GAAEM,MAAM,CAACE,QAAQ,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACG,UAAU,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MAE7FI,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,KAAK,CAAC;MACzBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEb,SAAS,CAAC;MACnCY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEZ,OAAO,CAAC;MAE/BC,SAAS,CAACY,IAAI,CAAC;QAAEH,KAAK;QAAEI,KAAK,EAAEJ;MAAM,CAAC,CAAC;MACvCT,SAAS,CAACY,IAAI,CAAC;QAAEd,SAAS;QAAEe,KAAK,EAAEf;MAAU,CAAC,CAAC;MAC/CE,SAAS,CAACY,IAAI,CAAC;QAAEb,OAAO;QAAEc,KAAK,EAAEd;MAAQ,CAAC,CAAC;MAG3CE,aAAa,GAAGO,UAAU,CAAC,CAAC;IAC9B;IAEAP,aAAa,GAAG,CAAC,CAAC,CAAC;EACrB;EAEA,OAAOD,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}